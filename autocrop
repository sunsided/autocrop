#!/usr/bin/env python
import argparse
import re

HELP_MSG = "Invalid input '{}', see --help for usage error."

NUMBERS = re.compile(r'\d+')
def _valid_numbers(values):
    try: return [int(i) for i in NUMBERS.findall(values)]
    except ValueError:
        raise argparse.ArgumentTypeError(HELP_MSG)

def _valid_size(values):
    width, height = _valid_numbers(values) 
    try:
        assert width > 0 < height
        return _valid_numbers(values)
    except AssertionError:
        raise argparse.ArgumentTypeError(HELP_MSG.format(values))
    
def _valid_featured(values):
    x1, y1, x2, y2 = _valid_numbers(values)
    try:
        assert x1 < x2 and y1 < y2
        return _valid_numbers(values)
    except AssertionError:
        raise argparse.ArgumentTypeError(HELP_MSG.format(values))

def main():
    parser = argparse.ArgumentParser(description="Image cropper.")
    parser.add_argument("-s", "--size", type=_valid_size,
                        metavar="WxH",
                        help="ouput image size")
    parser.add_argument("-f", "--featured", type=_valid_featured,
                        metavar="X1,Y1,X2,Y2",
                        help=("coordinates of the important part of the image;"
                              "X1 < X2, Y1 < Y2; (0,0) = top-left corner"))
    parser.add_argument("-i", "--input", metavar="FILE",
                        help="path to the original image")
    parser.add_argument("-o", "--output", metavar="FILE",
                        help="path to the output image")
    args = parser.parse_args()

    print(args)

if __name__ == '__main__':
    main()
